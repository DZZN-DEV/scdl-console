name: Build Debug APK

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        default: 'main'

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload APKs as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Download APKs
        uses: actions/download-artifact@v3
        with:
          name: debug-apk
          path: .

      - name: Release APKs as GitHub Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          for apk in $(find . -name "*.apk"); do
            apk_name=$(basename "$apk")
            echo "Uploading $apk_name"
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/vnd.android.package-archive" \
              --data-binary @"$apk" \
              "https://api.github.com/repos/${{ github.repository }}/releases/assets?name=$apk_name"
            echo "Uploaded $apk_name"
          done
